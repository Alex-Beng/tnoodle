<project name="tnoodle" default="server" basedir=".">
	<description>
		See README.textile
	</description>

	<property name="server" location="server" />

	<taskdef name="build-dependencies" classname="tk.tnoodle.tools.ant.BuildEclipseDependenciesTask" />

	<target name="server">
		<ant antfile="${server}/build.xml" inheritAll="false" target="dist" />
	</target>

	<target name="graph">
		<echo>
			TODO - do something awesome here, like generating a dependency graph
		</echo>
	</target>

	<target name="release">
		<echo>
			TODO - increment VERSION and build?
		</echo>
	</target>

	<target name="bugs">
		<echo>
			TODO - there could be some fun stuff here using the TODO file as a backend
		</echo>
	</target>


	<!-- TODO - document!
		guard all calls to these functions
		 -->
	<property file="VERSION" />
	<fail message="Must define VERSION property in file VERSION (in the form VERSION=somestring)" unless="VERSION" />
	<fail message="TODO" unless="proj" />
	<fail message="TODO" unless="name" />

	<property name="src" value="${proj}/src" />
	<property name="bin" value="${proj}/bin" />
	<property name="dist" value="${proj}/dist" />
	<property name="classpath" value="${proj}/.classpath" />

	<target name="init">
		<mkdir dir="${dist}" />
		<mkdir dir="${bin}" />
	</target>

	<target name="compile" depends="init">
		<!-- TODO -
			  1. extract each jar into the bin directory
			  2. build children, copy their bin into our bin
			  -->
		<build-dependencies project="${proj}" />

		<javac srcdir="${src}" destdir="${bin}" debug="true" debuglevel="lines,vars,source" includeantruntime="false" />
	</target>

	<target name="dist">
		<!-- This is some pretty tricky oop stuff =) -->
		<ant antfile="${proj}/build.xml" target="compile" inheritAll="false" />

		<!-- TODO
			 optional main class?
			 -->
		<jar jarfile="${dist}/${name}-${VERSION}.jar" basedir="${bin}">
			<manifest>
				<attribute name="Main-Class" value="${main}"/>
				<attribute name="Implementation-Title" value="${name}"/>
				<attribute name="Implementation-Version" value="${VERSION}"/>
			</manifest>
		</jar>
	</target>

	<target name="clean">
		<delete dir="${bin}" />
		<delete dir="${dist}" />
	</target>

</project>
