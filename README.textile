TNoodle is really a collection of projects. Each project can be treated as a full fledged Eclipse project (they each have a .classpath and .project file). Furthermore, the whole tnoodle directory can be opened as an Eclipse workspace. Simply go to File > Import > Existing Projects into Workspace, and enter your tnoodle directory under "Select root directory". Eclipse should automagically detect all the tnoodle projects.

TODO - add comment about custom ant installation, maybe add top level scripts to set up PATH and ANT_HOME?
TODO - git submodule init ?

* jcubeexplorer: A wrapper for Herbert Kociemba's excellent Java implementation of the 2-phase algorithm to save its tables to disk. This shaves the ~10 seconds normally spent starting up down to a fraction of a second. The original source is available here: http://kociemba.org/cube.htm

* tnoodlelib: Java libraries used throughought tnoodle.

* tnoodlescrambles: A Java scrambling suite. Java applications can use this project as a library, a perfect example of this is tnoodleserver.

* tnoodleserver: A webserver that serves up scrambles, scramble images, and tnoodletimer.

* tnoodlestackmat: A Java library that parses a Stackmat plugged into an audio port.

* tnoodletimer: A Javascript Rubik's Cube timer.

* tnoodletools: The location for utilities used to develop tnoodle.

* tnoodleutils: Useful Java functions used throughout tnoodle.

Dependency graph (generated by running "tmt graph")

all
`-- timer
    |-- server
    |   |-- /home/jeremy/tnoodle/lib/h2-1.2.147.jar
    |   |-- /home/jeremy/tnoodle/lib/jopt-simple-3.2.jar
    |   `-- utils
    |       `-- /home/jeremy/tnoodle/lib/gson-1.4.jar
    |-- stackmat
    |   `-- /home/jeremy/tnoodle/lib/plugin.jar
    `-- scrambleserverplugin
        |-- /home/jeremy/tnoodle/lib/iText-5.0.2.jar
        |-- server (seen)
        |-- scrambles
        |   |-- jcubeexplorer
        |   `-- utils (seen)
        `-- utils (seen)
